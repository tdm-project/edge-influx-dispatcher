name: Docker Build/Publish Image

on:
  push:
    branches: [ main, develop ]

env:
  DOCKER_IMAGE_NAME: "tdmproject/edge-influx-dispatcher"
  DOCKER_IMAGE_TAG: ${{ github.run_number }}
  PLATFORM: "linux/arm/v7"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout the code
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Build the 'testing' image
      run: |
        docker buildx build \
        --target=test \
        --platform ${{ env.PLATFORM }} \
        -t ${{ env.DOCKER_IMAGE_NAME }}:test \
        --output "type=image,push=false" \
        -f docker/Dockerfile .
    -
      name: Inspect image
      run: |
        docker buildx imagetools inspect ${{ env.DOCKER_IMAGE_NAME }}:test
    -
      name: Start the Edge environment
      run: |
        docker images
        docker-compose -f tests/docker-compose.yaml up -d
        # wait for the services to become healthy
        for i in {1..30}; do
          curl http://localhost:8086/ping && break
          echo "Waiting for InfluxDB to become ready..."
          sleep 1
        done
    -
      name: Test
      run: |
        docker-compose -f tests/docker-compose.yaml exec influxdb-dispatcher_test tests/entrypoint.sh -v test_configs
        docker-compose -f tests/docker-compose.yaml exec influxdb-dispatcher_test tests/entrypoint.sh -v test_relay
    - 
      name: Stop the Edge environment
      run: |
        docker-compose -f tests/docker-compose.yaml down
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PWD }}
    -
      name: Build on main
      if: github.ref == 'refs/heads/main'
      run: |
        docker buildx build \
        --target=final \
        -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
        -t ${{ env.DOCKER_IMAGE_NAME }}:latest \
        --platform ${{ env.PLATFORM }} \
        -f docker/Dockerfile --output type=registry .
    -
      name: Build on develop
      if: github.ref == 'refs/heads/develop'
      run: |
        docker buildx build \
        --target=final \
        -t ${{ env.DOCKER_IMAGE_NAME }}:dev-${{ env.DOCKER_IMAGE_TAG }} \
        --platform ${{ env.PLATFORM }} \
        -f docker/Dockerfile --output type=registry .
